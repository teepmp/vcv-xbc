// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Summarizes FAQ answers using AI.
 *
 * - summarizeFaqAnswer - A function that summarizes an FAQ answer.
 * - SummarizeFaqAnswerInput - The input type for the summarizeFaqAnswer function.
 * - SummarizeFaqAnswerOutput - The return type for the summarizeFaqAnswer function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SummarizeFaqAnswerInputSchema = z.object({
  faqAnswer: z.string().describe('The full FAQ answer to be summarized.'),
});
export type SummarizeFaqAnswerInput = z.infer<typeof SummarizeFaqAnswerInputSchema>;

const SummarizeFaqAnswerOutputSchema = z.object({
  summary: z.string().describe('The summarized FAQ answer.'),
});
export type SummarizeFaqAnswerOutput = z.infer<typeof SummarizeFaqAnswerOutputSchema>;

export async function summarizeFaqAnswer(input: SummarizeFaqAnswerInput): Promise<SummarizeFaqAnswerOutput> {
  return summarizeFaqAnswerFlow(input);
}

const prompt = ai.definePrompt({
  name: 'summarizeFaqAnswerPrompt',
  input: {schema: SummarizeFaqAnswerInputSchema},
  output: {schema: SummarizeFaqAnswerOutputSchema},
  prompt: `Summarize the following FAQ answer:

{{{faqAnswer}}}

Summary:`,
});

const summarizeFaqAnswerFlow = ai.defineFlow(
  {
    name: 'summarizeFaqAnswerFlow',
    inputSchema: SummarizeFaqAnswerInputSchema,
    outputSchema: SummarizeFaqAnswerOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
